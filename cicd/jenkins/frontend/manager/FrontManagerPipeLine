pipeline {
    agent any
    environment {
        //Docker Hub 아이디와 비밀번호 설정
        dockerhubid = ''
        dockerhubpw = ''
    }
    stages {
        stage('git clone') {
            steps {
                 git branch: 'develop',
                    credentialsId: 'github_access_token',
                    url: 'https://github.com/beyond-sw-camp/be02-fin-Surisuri_Masuri-OMS.git'
             }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    dir('frontend/manager/') { // 디렉토리 변경
                        sh 'pwd'
                        sh 'ls -al'
                        sh 'rm -rf dist/'
                        sh 'npm install'
                    }
                }
            }
        }
        stage('test') {
             steps {
                 script {
                    try {
                        dir('frontend/store/') {
                            sh 'pwd'
                            sh 'npm run test'
                            currentBuild.result = 'SUCCESS'
                        }
                    } catch (Exception e) {
                        echo "Build failed: ${e.message}"
                        currentBuild.result = 'FAILURE'
                    }
                }
             }
         }
        stage('Build') {
            steps {
                script {
                    try {
                        dir('frontend/manager/') {
                            sh 'pwd'
                            sh 'npm run build'
                            currentBuild.result = 'SUCCESS'
                        }
                    } catch (Exception e) {
                        echo "Build failed: ${e.message}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
        stage('Docker Build') {
            steps {
                dir('frontend/manager/') { // 디렉토리 변경
                    sh 'pwd'
                    sh 'docker build -t beomiya/final_manager_frontend:1.${BUILD_ID} .' // 변경된 명령어
                }
            }
        }
        stage('Docker Push') {
            steps {
                // Docker 이미지를 Docker Hub에 푸시
                sh "docker login -u $dockerhubid -p $dockerhubpw"
                sh "docker push beomiya/final_manager_frontend:1.${BUILD_ID}"
            }
        }

        stage('SSH Transfer and Kubernetes Deployment') {
            steps {
                script {
                    sshPublisher(
                        continueOnError: false,
                        failOnError: true,
                        publishers: [
                            sshPublisherDesc(
                                configName: 'K8S',
                                verbose: true,
                                transfers: [
                                    sshTransfer(
                                        sourceFiles: 'cicd/k8s/frontend/manager/frontendmanager-deployment.yml',
                                        remoteDirectory: '/root',
                                        execCommand: 'sed -i "s/VERSION/$BUILD_NUMBER/g" /root/cicd/k8s/frontend/manager/frontendmanager-deployment.yml'
                                    ),
                                    sshTransfer(
                                        execCommand: 'kubectl apply -f /root/cicd/k8s/frontend/manager/frontendmanager-deployment.yml'
                                    )
                                ]
                            )
                        ]
                    )
                }
            }
        }
    }
}